// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "09/22/2024 11:03:57"

// 
// Device: Altera EP4CE22F17C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module frequency_scaler (
	clk_50MHz,
	clk_1MHz);
input 	clk_50MHz;
output 	clk_1MHz;

// Design Ports Information
// clk_1MHz	=>  Location: PIN_L4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk_50MHz	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk_1MHz~output_o ;
wire \clk_50MHz~input_o ;
wire \clk_50MHz~inputclkctrl_outclk ;
wire \Add0~3 ;
wire \Add0~4_combout ;
wire \Add0~5 ;
wire \Add0~6_combout ;
wire \counter~1_combout ;
wire \Add0~7 ;
wire \Add0~8_combout ;
wire \counter~0_combout ;
wire \Add0~0_combout ;
wire \counter~2_combout ;
wire \Add0~1 ;
wire \Add0~2_combout ;
wire \Equal0~0_combout ;
wire \clk_1MHz~0_combout ;
wire \clk_1MHz~reg0_q ;
wire [4:0] counter;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y6_N16
cycloneive_io_obuf \clk_1MHz~output (
	.i(!\clk_1MHz~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\clk_1MHz~output_o ),
	.obar());
// synopsys translate_off
defparam \clk_1MHz~output .bus_hold = "false";
defparam \clk_1MHz~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y16_N8
cycloneive_io_ibuf \clk_50MHz~input (
	.i(clk_50MHz),
	.ibar(gnd),
	.o(\clk_50MHz~input_o ));
// synopsys translate_off
defparam \clk_50MHz~input .bus_hold = "false";
defparam \clk_50MHz~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \clk_50MHz~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clk_50MHz~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clk_50MHz~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clk_50MHz~inputclkctrl .clock_type = "global clock";
defparam \clk_50MHz~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X1_Y6_N2
cycloneive_lcell_comb \Add0~2 (
// Equation(s):
// \Add0~2_combout  = (counter[1] & (!\Add0~1 )) # (!counter[1] & ((\Add0~1 ) # (GND)))
// \Add0~3  = CARRY((!\Add0~1 ) # (!counter[1]))

	.dataa(gnd),
	.datab(counter[1]),
	.datac(gnd),
	.datad(vcc),
	.cin(\Add0~1 ),
	.combout(\Add0~2_combout ),
	.cout(\Add0~3 ));
// synopsys translate_off
defparam \Add0~2 .lut_mask = 16'h3C3F;
defparam \Add0~2 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: LCCOMB_X1_Y6_N4
cycloneive_lcell_comb \Add0~4 (
// Equation(s):
// \Add0~4_combout  = (counter[2] & (\Add0~3  $ (GND))) # (!counter[2] & (!\Add0~3  & VCC))
// \Add0~5  = CARRY((counter[2] & !\Add0~3 ))

	.dataa(gnd),
	.datab(counter[2]),
	.datac(gnd),
	.datad(vcc),
	.cin(\Add0~3 ),
	.combout(\Add0~4_combout ),
	.cout(\Add0~5 ));
// synopsys translate_off
defparam \Add0~4 .lut_mask = 16'hC30C;
defparam \Add0~4 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: FF_X1_Y6_N5
dffeas \counter[2] (
	.clk(\clk_50MHz~inputclkctrl_outclk ),
	.d(\Add0~4_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(counter[2]),
	.prn(vcc));
// synopsys translate_off
defparam \counter[2] .is_wysiwyg = "true";
defparam \counter[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y6_N6
cycloneive_lcell_comb \Add0~6 (
// Equation(s):
// \Add0~6_combout  = (counter[3] & (!\Add0~5 )) # (!counter[3] & ((\Add0~5 ) # (GND)))
// \Add0~7  = CARRY((!\Add0~5 ) # (!counter[3]))

	.dataa(counter[3]),
	.datab(gnd),
	.datac(gnd),
	.datad(vcc),
	.cin(\Add0~5 ),
	.combout(\Add0~6_combout ),
	.cout(\Add0~7 ));
// synopsys translate_off
defparam \Add0~6 .lut_mask = 16'h5A5F;
defparam \Add0~6 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: LCCOMB_X1_Y6_N26
cycloneive_lcell_comb \counter~1 (
// Equation(s):
// \counter~1_combout  = \Add0~6_combout  $ (((\Equal0~0_combout  & counter[4])))

	.dataa(\Equal0~0_combout ),
	.datab(gnd),
	.datac(counter[4]),
	.datad(\Add0~6_combout ),
	.cin(gnd),
	.combout(\counter~1_combout ),
	.cout());
// synopsys translate_off
defparam \counter~1 .lut_mask = 16'h5FA0;
defparam \counter~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y6_N27
dffeas \counter[3] (
	.clk(\clk_50MHz~inputclkctrl_outclk ),
	.d(\counter~1_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(counter[3]),
	.prn(vcc));
// synopsys translate_off
defparam \counter[3] .is_wysiwyg = "true";
defparam \counter[3] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y6_N8
cycloneive_lcell_comb \Add0~8 (
// Equation(s):
// \Add0~8_combout  = \Add0~7  $ (!counter[4])

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(counter[4]),
	.cin(\Add0~7 ),
	.combout(\Add0~8_combout ),
	.cout());
// synopsys translate_off
defparam \Add0~8 .lut_mask = 16'hF00F;
defparam \Add0~8 .sum_lutc_input = "cin";
// synopsys translate_on

// Location: LCCOMB_X1_Y6_N28
cycloneive_lcell_comb \counter~0 (
// Equation(s):
// \counter~0_combout  = \Add0~8_combout  $ (((\Equal0~0_combout  & counter[4])))

	.dataa(\Equal0~0_combout ),
	.datab(gnd),
	.datac(counter[4]),
	.datad(\Add0~8_combout ),
	.cin(gnd),
	.combout(\counter~0_combout ),
	.cout());
// synopsys translate_off
defparam \counter~0 .lut_mask = 16'h5FA0;
defparam \counter~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y6_N29
dffeas \counter[4] (
	.clk(\clk_50MHz~inputclkctrl_outclk ),
	.d(\counter~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(counter[4]),
	.prn(vcc));
// synopsys translate_off
defparam \counter[4] .is_wysiwyg = "true";
defparam \counter[4] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y6_N0
cycloneive_lcell_comb \Add0~0 (
// Equation(s):
// \Add0~0_combout  = counter[0] $ (VCC)
// \Add0~1  = CARRY(counter[0])

	.dataa(gnd),
	.datab(counter[0]),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(\Add0~0_combout ),
	.cout(\Add0~1 ));
// synopsys translate_off
defparam \Add0~0 .lut_mask = 16'h33CC;
defparam \Add0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y6_N16
cycloneive_lcell_comb \counter~2 (
// Equation(s):
// \counter~2_combout  = \Add0~0_combout  $ (((\Equal0~0_combout  & counter[4])))

	.dataa(\Equal0~0_combout ),
	.datab(counter[4]),
	.datac(gnd),
	.datad(\Add0~0_combout ),
	.cin(gnd),
	.combout(\counter~2_combout ),
	.cout());
// synopsys translate_off
defparam \counter~2 .lut_mask = 16'h7788;
defparam \counter~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y6_N17
dffeas \counter[0] (
	.clk(\clk_50MHz~inputclkctrl_outclk ),
	.d(\counter~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(counter[0]),
	.prn(vcc));
// synopsys translate_off
defparam \counter[0] .is_wysiwyg = "true";
defparam \counter[0] .power_up = "low";
// synopsys translate_on

// Location: FF_X1_Y6_N3
dffeas \counter[1] (
	.clk(\clk_50MHz~inputclkctrl_outclk ),
	.d(\Add0~2_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(counter[1]),
	.prn(vcc));
// synopsys translate_off
defparam \counter[1] .is_wysiwyg = "true";
defparam \counter[1] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y6_N30
cycloneive_lcell_comb \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = (!counter[1] & (counter[3] & (!counter[2] & !counter[0])))

	.dataa(counter[1]),
	.datab(counter[3]),
	.datac(counter[2]),
	.datad(counter[0]),
	.cin(gnd),
	.combout(\Equal0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Equal0~0 .lut_mask = 16'h0004;
defparam \Equal0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y6_N18
cycloneive_lcell_comb \clk_1MHz~0 (
// Equation(s):
// \clk_1MHz~0_combout  = \clk_1MHz~reg0_q  $ (((\Equal0~0_combout  & counter[4])))

	.dataa(\Equal0~0_combout ),
	.datab(counter[4]),
	.datac(\clk_1MHz~reg0_q ),
	.datad(gnd),
	.cin(gnd),
	.combout(\clk_1MHz~0_combout ),
	.cout());
// synopsys translate_off
defparam \clk_1MHz~0 .lut_mask = 16'h7878;
defparam \clk_1MHz~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y6_N19
dffeas \clk_1MHz~reg0 (
	.clk(\clk_50MHz~inputclkctrl_outclk ),
	.d(\clk_1MHz~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\clk_1MHz~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \clk_1MHz~reg0 .is_wysiwyg = "true";
defparam \clk_1MHz~reg0 .power_up = "low";
// synopsys translate_on

assign clk_1MHz = \clk_1MHz~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_C1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_D2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_H1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_H2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_F16,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
